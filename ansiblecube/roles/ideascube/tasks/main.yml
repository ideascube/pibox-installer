---
# - name: Configure the ideascube package repository
#   template: src=ideascube.list.j2 dest=/etc/apt/sources.list.d/ideascube.list owner=root group=root mode=644
#   when: ansible_distribution_release == "jessie"
#   tags: master

#### Install last ideascube package

# - name: Install ideascube
#   apt:
#     name: ideascube={{ ideascube_version}}
#     force: yes
#     update_cache: yes
#     dpkg_options: "force-confnew"
#     autoremove: yes
#     autoclean: yes
#   register: has_been_installed
#   when: ansible_distribution_release == "jessie"
#   tags: master

# TEMPORARY FIX UNTIL MOVE SUPPORT IS MERGED UPSTREAM
- name: Install custom (move support) ideascube version
  apt:
    deb: "{{ mirror }}/dev/ideascube_{{ ideascube_version }}_armhf.deb"
    force: yes
    autoremove: yes
    autoclean: yes
  register: has_been_installed
  tags: master

- name: Get ideascube version
  shell: dpkg-query -W  ideascube  | awk '{print $2}' ; echo
  register: ideascube_newversion
  tags: master

- name: Create ideascube handlers directories
  file:
    path: "{{ data_path }}/ideascube"
    state: directory
  tags: reconfigure

- name: change ownership of ideascube handlers directories
  file:
    path: /var/ideascube/{{ item }}
    owner: "{{ username }}"
    group: www-data
    mode: 0775
    recurse: yes
    state: directory
  with_items: "{{ ideascube_handlers }}"
  tags: reconfigure

- name: move ideascube handlers directories
  command: mv /var/ideascube/{{ item }} {{ data_path }}/ideascube/
  with_items: "{{ ideascube_handlers }}"
  ignore_errors: yes
  tags: reconfigure

- name: Symlink ideascube handlers in idascube folder
  file:
    src: "{{ data_path }}/ideascube/{{ item }}"
    dest: "/var/ideascube/{{ item }}"
    state: link
    force: yes
  with_items: "{{ ideascube_handlers }}"
  tags: reconfigure

- name: replace BSF logo with Kiwix one
  copy:
    src: logoKIWIX-ideascube.png
    dest: /opt/venvs/ideascube/lib/python{{ python3_version }}/site-packages/ideascube/static/ideascube/img/logoBSF.png
  tags: master

- block:

  - debug: msg="Customize branding"

  - name: Ensure the branding directory exists
    file:
      path: /usr/share/ideascube/static/branding
      state: directory
      owner: root
      group: root
      mode: 0755

  - stat: 
      path: "{{ custom_branding_path }}/{{ item }}"
    with_items:
     - favicon.png
     - header-logo.png
     - style.css
    register: branding_files_stat

  - copy:
      src: "{{ custom_branding_path }}/{{ item.item }}"
      dest: "/usr/share/ideascube/static/branding/{{ item.item }}"
      owner: ideascube
      group: ideascube
      mode: 0644
    when: item.stat.exists
    with_items: "{{ branding_files_stat.results }}"

  when: has_custom_branding | bool
  tags: reconfigure

- name: Create ideascube configuration file
  template:
    src: pibox.py.j2
    dest: /opt/venvs/ideascube/lib/python{{ python3_version }}/site-packages/ideascube/conf/{{ ideascube_id }}.py
    mode: 0644
  notify: restart uwsgi
  tags: ['master', 'setup', 'reconfigure']

- name: Edit pibox.py to change ALLOWED_HOSTS
  replace:
    dest: /opt/venvs/ideascube/lib/python{{ python3_version }}/site-packages/ideascube/conf/{{ ideascube_id }}.py
    regexp: '^ALLOWED_HOSTS =.+$'
    replace: 'ALLOWED_HOSTS = [".{{ fqdn }}", "{{ fqdn }}", "{{ hostname }}", "localhost", "127.0.0.1"]'
  notify: restart uwsgi
  tags: rename

- name: Edit pibox.py to change DOMAIN
  replace:
    dest: /opt/venvs/ideascube/lib/python{{ python3_version }}/site-packages/ideascube/conf/{{ ideascube_id }}.py
    regexp: '^DOMAIN = .+'
    replace: 'DOMAIN = "{{ fqdn }}"'
  notify: restart uwsgi
  tags: rename

- name: Edit pibox.py to change cards URLs
  replace:
    dest: /opt/venvs/ideascube/lib/python{{ python3_version }}/site-packages/ideascube/conf/{{ ideascube_id }}.py
    regexp: '^     "url": "http://{{ item.slug }}.+$'
    replace: '     "url": "http://{{ item.fqdn }}",'
  with_items:
     - { slug: 'fr.wikifundi', fqdn: 'fr.{{ wikifundi_fqdn }}' }
     - { slug: 'en.wikifundi', fqdn: 'en.{{ wikifundi_fqdn }}' }
     - { slug: 'aflatoun', fqdn: '{{ aflatoun_fqdn }}' }
     - { slug: 'edupi', fqdn: '{{ edupi_fqdn }}' }

  notify: restart uwsgi
  tags: rename

- name: Change IDEASCUBE_ID
  lineinfile: 
    dest: /etc/default/ideascube
    regexp: 'IDEASCUBE_ID='
    line: 'IDEASCUBE_ID={{ ideascube_id }}'
    state: present
  notify: restart uwsgi
  tags: master

- name: Run Ideascube migrations after the first installation
  become: yes
  become_user: "{{ username }}"
  command: ideascube migrate --database={{ item }}
  with_items:
  - default
  - transient
  when: has_been_installed.changed == True
  tags: master

- name: Check if ideascube super user is installed
  become: yes
  become_user: "{{ username }}"
  environment:
    ADMIN_ACCOUNT: "{{ admin_account }}"
  command: ideascube shell -c "import os; from ideascube.models import User; print('****{}****'.format(User.objects.filter(serial=os.environ.get('ADMIN_ACCOUNT')).count()))"
  register: ideascube_admin_shell_output
  when: admin_account is defined
  tags: reconfigure

- name: Install Ideascube super user
  become: yes
  become_user: "{{ username }}"
  environment:
    ADMIN_ACCOUNT: "{{ admin_account }}"
    ADMIN_PASSWORD: "{{ admin_password }}"
  command: ideascube shell -c "import os; from ideascube.models import User; User.objects.create_superuser(os.environ.get('ADMIN_ACCOUNT'), os.environ.get('ADMIN_PASSWORD'))"
  when: admin_account is defined and ideascube_admin_shell_output.stdout.split('****')[1]|int == 0
  tags: reconfigure

- name: Ensure that Ideascube folder belong the ideascube user
  file:
    path: /var/ideascube/main/
    owner: "{{ username }}"
    group: "{{ username }}"
    recurse: yes
    state: directory
  tags: master

- name: Ensure that Ideascube cache folder belong the ideascube user
  file:
    path: /var/cache/ideascube/
    owner: "{{ username }}"
    group: "{{ username }}"
    recurse: yes
    state: directory
  tags: master

- name: Set Ideascube name
  become: yes
  become_user: "{{ username }}"
  command: ideascube config set server site-name {{ hostname }}
  tags: ['master', 'rename']

- name: Ensure a kiwix library file is built
  become: yes
  become_user: "{{ username }}"
  command: ideascube shell -c "from ideascube.serveradmin.catalog import Kiwix ; Kiwix.commit()"
  tags: ['master', 'setup', 'reconfigure', 'resize', 'move-content']

- name: Enable the Ideascube Nginx site
  file:
    src: /etc/nginx/sites-available/ideascube
    dest: /etc/nginx/sites-enabled/ideascube
    state: link
    force: yes
  notify: restart nginx
  tags: master

- name: Enable the Ideascube uWSGI app
  file:
    src: /etc/uwsgi/apps-available/ideascube.ini
    dest: /etc/uwsgi/apps-enabled/ideascube.ini
    state: link
    force: yes
  notify: restart uwsgi
  tags: master

- name: Add router_cache to plugin uwsgi list
  lineinfile:
    dest: /etc/uwsgi/apps-available/ideascube.ini
    regexp: '^plugins'
    line: 'plugins         = pam,python3,router_cache'
    state: present
  notify: restart uwsgi
  tags: master

- name: Create and set up a cache for uwsgi
  blockinfile:
    block: "{{ lookup('file', 'uwsgi-cache.ini') }}"
    dest: /etc/uwsgi/apps-available/ideascube.ini
  notify: restart uwsgi
  tags: master

- block:
  - name: remove wrong server name in ideascube vhost
    lineinfile:
      dest: /etc/nginx/sites-available/ideascube
      regexp: '^    server_name'
      state: absent

  - name: Fix nginx vhost for ideascube
    lineinfile:
      dest: /etc/nginx/sites-available/ideascube
      insertafter: '^    # the domain name it will serve for'
      line: "    server_name {{ fqdn }} {{ hostname }};"
      state: present
    notify: restart nginx

  - name: Fix nginx vhost for ideascube (static files)
    lineinfile:
      dest: /etc/nginx/sites-available/ideascube
      insertbefore: '^    root'
      line: "    server_name sites.{{ fqdn }} sites.{{ hostname }};"
      state: present
    notify: restart nginx
  tags: ['master', 'rename']

- name: Copy ideascube_leftover_files.service systemd unit
  copy:
    src: ideascube_leftover_files.service
    dest: /etc/systemd/system/ideascube_leftover_files.service
  notify: reload systemd
  tags: master

- name: Copy ideascube_leftover_files.timer systemd unit
  copy:
    src: ideascube_leftover_files.timer
    dest: /etc/systemd/system/ideascube_leftover_files.timer
  notify: reload systemd
  tags: master

- name: Enable unit ideascube_leftover_files.timer
  service:
    name: ideascube_leftover_files.timer
    enabled: yes
  tags: master

- name: Copy remove_staticfiles_json.sh
  copy: 
    src: remove_staticfiles_json.sh
    dest: /usr/local/bin/remove_staticfiles_json.sh
    mode: 0755
  tags: master

- name: Copy remove_staticfiles_json.service
  copy:
    src: remove_staticfiles_json.service
    dest: /etc/systemd/system/remove_staticfiles_json.service
  tags: master

- include_tasks: enable_service.yml service=remove_staticfiles_json
  tags: master
