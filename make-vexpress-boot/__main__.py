import os
import re
import sys
import shutil
import fileinput
import subprocess
import urllib.request
from netfilter_conf import NETFILTER_CONF
from zipfile import ZipFile

os.makedirs("build", exist_ok=True)
os.chdir("build")

boot_dir = "pibox-installer-vexpress-boot"
boot_zip = boot_dir + ".zip"

linux_version = "4.10"
linux_folder = "linux-" + linux_version
linux_zip = linux_folder + ".zip"
url = "https://github.com/torvalds/linux/archive/v{}.zip".format(linux_version)
exfat_url = "https://github.com/dorimanx/exfat-nofuse/archive/master.zip"
exfat_zip = "exfat-nofuse-master.zip"

print("--> make vexpress boot")
if os.path.isdir(boot_zip):
    print("nothing to do")
    exit(0)

print("--> download linux")
if os.path.isdir(linux_folder):
    print("nothing to do")
else:
    urllib.request.urlretrieve(url, filename=linux_zip)

    print("--> extract linux")
    zipFile = ZipFile(linux_zip)
    zipFile.extractall()
    os.remove(linux_zip)

print("--> download & extract exfat-nofuse")
urllib.request.urlretrieve(exfat_url, filename=exfat_zip)
zipFile = ZipFile(exfat_zip)
zipFile.extractall()

print("--> insert exfat module into kernel tree")
# move downloaded code to fs/exfat
exfat_folder = os.path.join(linux_folder, 'fs', 'exfat')
shutil.rmtree(exfat_folder, ignore_errors=True)
shutil.move("exfat-nofuse-master", exfat_folder)

# add a reference to fs/exfat in the fs/ Makefile
with open(os.path.join(linux_folder, 'fs', 'Makefile'), "a") as fs_makefile:
    fs_makefile.write("\nobj-$(CONFIG_EXFAT_FS)     += exfat/\n")

# add a reference to fs/exfat in the fs/ MenuConfig
for line in fileinput.input(os.path.join(linux_folder, 'fs', 'Kconfig'),
                            inplace=True):
    sys.stdout.write(line)
    if 'source "fs/fat/Kconfig"' in line:
        new_line = 'source "fs/exfat/Kconfig"\n'
        sys.stdout.write(new_line)

os.chdir(linux_folder)

print("--> set linux configuration")
subprocess.check_call("make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- vexpress_defconfig", shell=True)

# Modify configuration
with open(".config", "r") as config:
    lines = config.readlines()
with open(".config", "w") as config:
    for line in lines:
        # Disable HW_RANDOM otherwise
        line = re.sub(r"^CONFIG_HW_RANDOM=y$", "CONFIG_HW_RANDOM=n", line)
        config.write(line)

    # Enable FUSE
    config.write("\nCONFIG_FUSE_FS=y\n")

    # Enable ExFAT
    config.write("\nCONFIG_EXFAT_FS=y\n")

    # Enable IPV6
    config.write("\nCONFIG_IPV6=y\n")

    # Enable NET_NS
    config.write("\nCONFIG_NET_NS=y\n")

    # Enable netfilter
    config.write(NETFILTER_CONF)

subprocess.check_call("make -j 2 ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- olddefconfig", shell=True)

print("--> compile linux")
subprocess.check_call("make -j 2 ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- all", shell=True)

print("--> create vexpress boot directory")
os.mkdir("../{}".format(boot_dir))
subprocess.check_call("cp .config arch/arm/boot/zImage arch/arm/boot/dts/vexpress-v2p-ca15-tc1.dtb ../{}".format(boot_dir), shell=True)
subprocess.check_call("cp .config arch/arm/boot/zImage arch/arm/boot/dts/vexpress-v2p-ca15_a7.dtb ../{}".format(boot_dir), shell=True)
subprocess.check_call("cp .config arch/arm/boot/zImage arch/arm/boot/dts/vexpress-v2p-ca9.dtb ../{}".format(boot_dir), shell=True)
os.chdir("..")
with open("{}/README.txt".format(boot_dir), "w+") as readme:
    readme.write("""This is the kernel used by pibox-installer to boot the vexpress machine in QEMU
It has been generated by make-vexpress-boot script at https://framagit.org/ideascube/pibox-installer""")
    readme.flush()

print("--> create vexpress boot zip archive")
subprocess.check_call("zip -r --move {} {}".format(boot_zip, boot_dir), shell=True)
